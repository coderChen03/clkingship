"use strict";(self.webpackChunkclkingship=self.webpackChunkclkingship||[]).push([[487],{"./src/components/UpLoad/upload.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CheckUpload:()=>CheckUpload,Default:()=>Default,DragUpload:()=>DragUpload,__namedExportsOrder:()=>__namedExportsOrder,default:()=>upload_stories});var react=__webpack_require__("./node_modules/react/index.js"),axios=__webpack_require__("./node_modules/axios/lib/axios.js"),icon=__webpack_require__("./src/components/Icon/icon.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Progress=props=>{const{percent,strokeHeight,showText,styles,theme}=props;return(0,jsx_runtime.jsx)("div",{className:"clking-progress-bar",style:styles,children:(0,jsx_runtime.jsx)("div",{className:"clking-progress-bar-outer",style:{height:"".concat(strokeHeight,"px")},children:(0,jsx_runtime.jsx)("div",{className:"clking-progress-bar-inner color-".concat(theme),style:{width:"".concat(percent,"%")},children:showText&&(0,jsx_runtime.jsx)("span",{className:"inner-text",children:percent+"%"})})})})};Progress.defaultProps={strokeHeight:15,showText:!0,theme:"primary"};const progress=Progress;Progress.__docgenInfo={description:"",methods:[],displayName:"Progress",props:{percent:{required:!0,tsType:{name:"number"},description:""},strokeHeight:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"15",computed:!1}},showText:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},styles:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:""},theme:{required:!1,tsType:{name:"union",raw:'"primary" | "secondary" | "success" | "info" | "warning" | "danger" | "light" | "dark"',elements:[{name:"literal",value:'"primary"'},{name:"literal",value:'"secondary"'},{name:"literal",value:'"success"'},{name:"literal",value:'"info"'},{name:"literal",value:'"warning"'},{name:"literal",value:'"danger"'},{name:"literal",value:'"light"'},{name:"literal",value:'"dark"'}]},description:"",defaultValue:{value:'"primary"',computed:!1}}}};const UploadList=props=>{const{fileList,onRemove}=props;return(0,jsx_runtime.jsx)("ul",{className:"clking-upload-list",children:fileList.map((item=>(0,jsx_runtime.jsxs)("li",{className:"clking-upload-list-item ",children:[(0,jsx_runtime.jsxs)("span",{className:"file-name file-name-".concat(item.status),children:[(0,jsx_runtime.jsx)(icon.A,{icon:"file-alt",theme:"secondary"}),item.name]}),(0,jsx_runtime.jsxs)("span",{className:"file-status",children:["uploading"===item.status&&(0,jsx_runtime.jsx)(icon.A,{icon:"spinner",spin:!0,theme:"primary"}),"success"===item.status&&(0,jsx_runtime.jsx)(icon.A,{icon:"check-circle",theme:"success"}),"error"===item.status&&(0,jsx_runtime.jsx)(icon.A,{icon:"times-circle",theme:"danger"})]}),(0,jsx_runtime.jsx)("span",{className:"file-actions",children:(0,jsx_runtime.jsx)(icon.A,{icon:"times",onClick:e=>{e.preventDefault(),e.stopPropagation(),onRemove&&onRemove(item)}})}),"uploading"===item.status&&(0,jsx_runtime.jsx)(progress,{percent:item.percent||0})]},item.uid)))})},uploadList=UploadList;UploadList.__docgenInfo={description:"",methods:[],displayName:"UploadList",props:{fileList:{required:!0,tsType:{name:"Array",elements:[{name:"UploadFile"}],raw:"UploadFile[]"},description:""},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(file: UploadFile) => void",signature:{arguments:[{type:{name:"UploadFile"},name:"file"}],return:{name:"void"}}},description:""}}};var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames);const Dragger=props=>{const{onFile,children}=props,[dragOver,setDragOver]=(0,react.useState)(!1),klass=classnames_default()("clking-uploader-dragger",{"is-dragover":dragOver}),handleDrag=(e,flag)=>{e.preventDefault(),setDragOver(flag)};return(0,jsx_runtime.jsx)("div",{className:klass,onDragOver:e=>{handleDrag(e,!0)},onDragLeave:e=>{handleDrag(e,!1)},onDrop:e=>{e.preventDefault(),setDragOver(!1),console.log("inside drag",e.dataTransfer.files),onFile(e.dataTransfer.files)},children})},dragger=Dragger;Dragger.__docgenInfo={description:"",methods:[],displayName:"Dragger",props:{onFile:{required:!0,tsType:{name:"signature",type:"function",raw:"(file: FileList) => void",signature:{arguments:[{type:{name:"FileList"},name:"file"}],return:{name:"void"}}},description:""},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};const Upload=props=>{const{action,defaultFileList,beforeUpload,onProgress,onSuccess,onError,onChange,onRemove,header,name,data,withCredentials,multiple,accept,drag,children}=props,fileInputRef=(0,react.useRef)(null),[fileList,setFileList]=(0,react.useState)(defaultFileList||[]),uploadFiles=files=>{Array.from(files).forEach((file=>{if(beforeUpload){let result=beforeUpload(file);result&&result instanceof Promise?result.then((processedFile=>{postFileFunc(processedFile)})):!0===result&&postFileFunc(file)}else postFileFunc(file)}))},updateFileList=(updateFile,updateObj)=>{setFileList((prevFile=>prevFile.map((file=>file.uid===updateFile.uid?{...file,...updateObj}:file))))},postFileFunc=file=>{let _file={uid:Date.now()+"upload-file",size:file.size,name:file.name,status:"ready",percent:0,raw:file};setFileList((prevFileList=>[_file,...prevFileList]));let formData=new FormData;formData.append(name||file.name,file),data&&Object.keys(data).forEach((key=>{formData.append(key,data[key])})),axios.A.post(action,formData,{headers:{"Content-Type":"multipart/form-data",...header},withCredentials,onUploadProgress:e=>{let percentage=Math.round(100*e.loaded/(e.total?e.total:100))||0;percentage<100&&(console.log(fileList,"fileList"),updateFileList(_file,{percent:percentage,status:"uploading"}),onProgress&&onProgress(percentage,_file))}}).then((resp=>{updateFileList(_file,{response:resp.data,status:"success"}),onSuccess&&onSuccess(resp.data,_file),onChange&&onChange(_file)})).catch((error=>{updateFileList(_file,{error,status:"error"}),onError&&onError(error,_file),onChange&&onChange(_file)}))};return(0,jsx_runtime.jsx)("div",{className:"clking-upload-component",children:(0,jsx_runtime.jsxs)("div",{className:"clking-upload-input",style:{display:"inline-block"},onClick:()=>{fileInputRef.current&&fileInputRef.current.click()},children:[drag?(0,jsx_runtime.jsx)(dragger,{onFile:files=>{uploadFiles(files)},children}):children,(0,jsx_runtime.jsx)("input",{ref:fileInputRef,className:"clking-file-input",multiple,accept,onChange:e=>{let files=e.target.files;files&&(uploadFiles(files),fileInputRef.current&&(fileInputRef.current.value=""))},style:{display:"none"},type:"file"}),(0,jsx_runtime.jsx)(uploadList,{fileList,onRemove:file=>{setFileList((prevFileList=>prevFileList.filter((item=>item.uid!==file.uid)))),onRemove&&onRemove(file)}})]})})};Upload.__docgenInfo={description:"通过点击或者拖拽上传文件\r\n### 引用方法\r\n\r\n~~~js\r\nimport { Upload } from 'clkingship'\r\n~~~",methods:[],displayName:"Upload",props:{action:{required:!0,tsType:{name:"string"},description:"必选参数, 上传的地址"},defaultFileList:{required:!1,tsType:{name:"Array",elements:[{name:"UploadFile"}],raw:"UploadFile[]"},description:"上传的文件列表,"},beforeUpload:{required:!1,tsType:{name:"signature",type:"function",raw:"(file: File) => boolean | Promise<File>",signature:{arguments:[{type:{name:"File"},name:"file"}],return:{name:"union",raw:"boolean | Promise<File>",elements:[{name:"boolean"},{name:"Promise",elements:[{name:"File"}],raw:"Promise<File>"}]}}},description:"上传文件之前的钩子，参数为上传的文件，若返回 false 或者 Promise 则停止上传。"},onProgress:{required:!1,tsType:{name:"signature",type:"function",raw:"(percentage: number, file: UploadFile) => void",signature:{arguments:[{type:{name:"number"},name:"percentage"},{type:{name:"UploadFile"},name:"file"}],return:{name:"void"}}},description:"文件上传时的钩子"},onSuccess:{required:!1,tsType:{name:"signature",type:"function",raw:"(data: any, file: UploadFile) => void",signature:{arguments:[{type:{name:"any"},name:"data"},{type:{name:"UploadFile"},name:"file"}],return:{name:"void"}}},description:"文件上传成功时的钩子"},onError:{required:!1,tsType:{name:"signature",type:"function",raw:"(error: any, file: UploadFile) => void",signature:{arguments:[{type:{name:"any"},name:"error"},{type:{name:"UploadFile"},name:"file"}],return:{name:"void"}}},description:"文件上传失败时的钩子"},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(file: UploadFile) => void",signature:{arguments:[{type:{name:"UploadFile"},name:"file"}],return:{name:"void"}}},description:"文件状态改变时的钩子，上传成功或者失败时都会被调用"},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(file: UploadFile) => void",signature:{arguments:[{type:{name:"UploadFile"},name:"file"}],return:{name:"void"}}},description:"文件列表移除文件时的钩子"},header:{required:!1,tsType:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},description:"自定义header"},name:{required:!1,tsType:{name:"string"},description:"自定义文件名"},data:{required:!1,tsType:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},description:"上传时附带的额外参数"},withCredentials:{required:!1,tsType:{name:"boolean"},description:"支持发送 cookie 凭证信息"},multiple:{required:!1,tsType:{name:"boolean"},description:"是否支持多选文件"},accept:{required:!1,tsType:{name:"string"},description:"可选参数, 接受上传的文件类型"},drag:{required:!1,tsType:{name:"boolean"},description:"是否支持拖拽上传文件"},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};var Button_button=__webpack_require__("./src/components/Button/button.tsx");const checkFileSize=file=>!(Math.round(file.size/1024)>50)||(alert("file too big"),!1),upload_stories={title:"Upload 文件上传",component:Upload,tags:["autodocs"]},Default=()=>(0,jsx_runtime.jsx)(Upload,{action:"https://jsonplaceholder.typicode.com/posts/",children:(0,jsx_runtime.jsxs)(Button_button.A,{children:[(0,jsx_runtime.jsx)(icon.A,{icon:"upload"}),"click upload"]})});Default.storyName="默认的文件上传";const CheckUpload=()=>(0,jsx_runtime.jsx)(Upload,{beforeUpload:checkFileSize,action:"https://jsonplaceholder.typicode.com/posts/",children:(0,jsx_runtime.jsxs)(Button_button.A,{children:[(0,jsx_runtime.jsx)(icon.A,{icon:"upload"})," 不能上传大于50Kb！"]})});CheckUpload.storyName="上传前检查文件大小";const DragUpload=()=>(0,jsx_runtime.jsxs)(Upload,{beforeUpload:checkFileSize,action:"https://jsonplaceholder.typicode.com/posts/",drag:!0,children:[(0,jsx_runtime.jsx)(icon.A,{icon:"upload",size:"5x",theme:"secondary"}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)("p",{children:"Drag file over to upload"})]});DragUpload.storyName="拖拽上传文件",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'() => {\n  // https://run.mocky.io/v3/61cbce4e-8486-4ea8-a64b-999cb76126fd\n  // https://jsonplaceholder.typicode.com/posts/\n  /**测试文件上传 进度 成功 失败 */\n  // return <Upload action="https://jsonplaceholder.typicode.com/posts/" onProgress={action("progress")} onSuccess={action("success")} onError={action("error")}></Upload>;\n  /**检查文件大小 */\n  // return <Upload action="https://jsonplaceholder.typicode.com/posts/" beforeUpload={checkFileSize} onChange={action("change")}></Upload>;\n  /**返回一个处理过的 Promise文件 */\n  // return <Upload action="https://jsonplaceholder.typicode.com/posts/" beforeUpload={filePromise} onChange={action("change")}></Upload>;\n  /**传递默认文件列表 */\n  // return <Upload action="https://jsonplaceholder.typicode.com/posts/" defaultFileList={defaultFileList} onRemove={action("remove")} name="cl-filename" data={{ key: "value" }} header={{ "clhnb-upload": "file" }} accept=".jpg" multiple></Upload>;\n  //拖拽上传文件\n  return <Upload action="https://jsonplaceholder.typicode.com/posts/">\r\n      <Button>\r\n        <Icon icon="upload" />\r\n        click upload\r\n      </Button>\r\n    </Upload>;\n}',...Default.parameters?.docs?.source}}},CheckUpload.parameters={...CheckUpload.parameters,docs:{...CheckUpload.parameters?.docs,source:{originalSource:'() => {\n  return <Upload beforeUpload={checkFileSize} action="https://jsonplaceholder.typicode.com/posts/">\r\n      <Button>\r\n        <Icon icon="upload" /> 不能上传大于50Kb！\r\n      </Button>\r\n    </Upload>;\n}',...CheckUpload.parameters?.docs?.source}}},DragUpload.parameters={...DragUpload.parameters,docs:{...DragUpload.parameters?.docs,source:{originalSource:'() => {\n  return <Upload beforeUpload={checkFileSize} action="https://jsonplaceholder.typicode.com/posts/" drag>\r\n      <Icon icon="upload" size="5x" theme="secondary"></Icon>\r\n      <br></br>\r\n      <p>Drag file over to upload</p>\r\n    </Upload>;\n}',...DragUpload.parameters?.docs?.source}}};const __namedExportsOrder=["Default","CheckUpload","DragUpload"]},"./src/components/Button/button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button,A:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Button=props=>{const{btnType,className,disabled,size,children,href,...restProps}=props,classes=classnames__WEBPACK_IMPORTED_MODULE_1___default()("btn",className,{["btn-".concat(btnType)]:btnType,["btn-".concat(size)]:size,disabled:"link"===btnType&&disabled});return"link"===btnType&&href?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("a",{className:classes,href,...restProps,children}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{className:classes,disabled,...restProps,children})};Button.defaultProps={disabled:!1,btnType:"default"};const __WEBPACK_DEFAULT_EXPORT__=Button;Button.__docgenInfo={description:"页面中最常用的的按钮元素，适合于完成特定的交互，支持 HTML button 和 a 链接 的所有属性\r\n### 引用方法\r\n\r\n```javascript\r\nimport { Button } from 'clkingship'\r\n```",methods:[],displayName:"Button",props:{disabled:{defaultValue:{value:"false",computed:!1},required:!1},btnType:{defaultValue:{value:'"default"',computed:!1},required:!1}}}},"./src/components/Icon/icon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@fortawesome/react-fontawesome/index.es.js"),_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@fortawesome/fontawesome-svg-core/index.mjs"),_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@fortawesome/free-solid-svg-icons/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_3__.Yv.add(_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_5__.X7I);const Icon=props=>{const{className,theme,...restProps}=props,classes=classnames__WEBPACK_IMPORTED_MODULE_1___default()("clking-icon",className,{["icon-".concat(theme)]:theme});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__.g,{className:classes,...restProps})},__WEBPACK_DEFAULT_EXPORT__=Icon;Icon.__docgenInfo={description:"",methods:[],displayName:"Icon",props:{theme:{required:!1,tsType:{name:"union",raw:'"primary" | "secondary" | "success" | "info" | "warning" | "danger" | "light" | "dark"',elements:[{name:"literal",value:'"primary"'},{name:"literal",value:'"secondary"'},{name:"literal",value:'"success"'},{name:"literal",value:'"info"'},{name:"literal",value:'"warning"'},{name:"literal",value:'"danger"'},{name:"literal",value:'"light"'},{name:"literal",value:'"dark"'}]},description:""}},composes:["FontAwesomeIconProps"]}}}]);